{"version":3,"file":"react-d3-tree.modern.js","sources":["../src/Tree/NodeWrapper.js","../src/Node/SvgTextElement.js","../src/Node/ForeignObjectElement.js","../src/Node/index.js","../src/Link/index.js","../src/Tree/index.js","../src/util/index.js"],"sourcesContent":["import React from 'react';\nimport T from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\n\n// eslint-disable-next-line\nconst NodeWrapper = props =>\n  props.transitionDuration > 0 ? (\n    <TransitionGroup\n      component={props.component}\n      className={props.className}\n      transform={props.transform}\n    >\n      {props.children}\n    </TransitionGroup>\n  ) : (\n    <g className={props.className} transform={props.transform}>\n      {props.children}\n    </g>\n  );\n\nNodeWrapper.defaultProps = {\n  component: 'g',\n};\n\nNodeWrapper.propTypes = {\n  transitionDuration: T.number.isRequired,\n  component: T.string,\n  className: T.string.isRequired,\n  transform: T.string.isRequired,\n  children: T.array.isRequired,\n};\n\nexport default NodeWrapper;\n","import React from 'react';\nimport uuid from 'uuid';\nimport T from 'prop-types';\n\nexport default class SvgTextElement extends React.PureComponent {\n  render() {\n    const { name, nodeStyle, textLayout, attributes } = this.props;\n    return (\n      <g>\n        <text\n          className=\"nodeNameBase\"\n          style={nodeStyle.name}\n          textAnchor={textLayout.textAnchor}\n          x={textLayout.x}\n          y={textLayout.y}\n          transform={textLayout.transform}\n          dy=\".35em\"\n        >\n          {name}\n        </text>\n        <text\n          className=\"nodeAttributesBase\"\n          y={textLayout.y + 10}\n          textAnchor={textLayout.textAnchor}\n          transform={textLayout.transform}\n          style={nodeStyle.attributes}\n        >\n          {attributes &&\n            Object.keys(attributes).map(labelKey => (\n              <tspan x={textLayout.x} dy=\"1.2em\" key={uuid.v4()}>\n                {labelKey}: {attributes[labelKey]}\n              </tspan>\n            ))}\n        </text>\n      </g>\n    );\n  }\n}\n\nSvgTextElement.defaultProps = {\n  attributes: undefined,\n};\n\nSvgTextElement.propTypes = {\n  name: T.string.isRequired,\n  attributes: T.object,\n  textLayout: T.object.isRequired,\n  nodeStyle: T.object.isRequired,\n};\n","import React from 'react';\nimport T from 'prop-types';\n\nexport const BASE_MARGIN = 24;\n\nexport default class ForeignObjectElement extends React.PureComponent {\n  render() {\n    const { nodeData, nodeSize, render, foreignObjectWrapper } = this.props;\n    return (\n      <foreignObject\n        width={nodeSize.x - BASE_MARGIN}\n        height={nodeSize.y - BASE_MARGIN}\n        {...foreignObjectWrapper}\n      >\n        {React.cloneElement(render, { nodeData })}\n      </foreignObject>\n    );\n  }\n}\n\nForeignObjectElement.defaultProps = {\n  foreignObjectWrapper: {},\n};\n\nForeignObjectElement.propTypes = {\n  render: T.oneOfType([T.element, T.node]).isRequired,\n  nodeData: T.object.isRequired,\n  nodeSize: T.shape({\n    x: T.number,\n    y: T.number,\n  }).isRequired,\n  foreignObjectWrapper: T.object,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport { select } from 'd3';\n\nimport SvgTextElement from './SvgTextElement';\nimport ForeignObjectElement from './ForeignObjectElement';\nimport './style.css';\n\nexport default class Node extends React.Component {\n  state = {\n    transform: this.setTransform(this.props.nodeData, this.props.orientation, true),\n    initialStyle: {\n      opacity: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.commitTransform();\n  }\n\n  componentDidUpdate() {\n    this.commitTransform();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.shouldNodeTransform(this.props, nextProps);\n  }\n\n  shouldNodeTransform = (ownProps, nextProps) =>\n    nextProps.subscriptions !== ownProps.subscriptions ||\n    nextProps.nodeData.x !== ownProps.nodeData.x ||\n    nextProps.nodeData.y !== ownProps.nodeData.y ||\n    nextProps.orientation !== ownProps.orientation;\n\n  setTransform(nodeData, orientation, shouldTranslateToOrigin = false) {\n    const { x, y, parent } = nodeData;\n    if (shouldTranslateToOrigin) {\n      const hasParent = typeof parent === 'object';\n      const originX = hasParent ? parent.x : 0;\n      const originY = hasParent ? parent.y : 0;\n      return orientation === 'horizontal'\n        ? `translate(${originY},${originX})`\n        : `translate(${originX},${originY})`;\n    }\n    return orientation === 'horizontal' ? `translate(${y},${x})` : `translate(${x},${y})`;\n  }\n\n  applyTransform(transform, transitionDuration, opacity = 1, done = () => {}) {\n    if (transitionDuration === 0) {\n      select(this.node)\n        .attr('transform', transform)\n        .style('opacity', opacity);\n      done();\n    } else {\n      select(this.node)\n        .transition()\n        .duration(transitionDuration)\n        .attr('transform', transform)\n        .style('opacity', opacity)\n        .each('end', done);\n    }\n  }\n\n  commitTransform() {\n    const { nodeData, orientation, transitionDuration } = this.props;\n    const transform = this.setTransform(nodeData, orientation);\n\n    this.applyTransform(transform, transitionDuration);\n  }\n\n  renderNodeElement = nodeStyle => {\n    const { circleRadius, nodeSvgShape } = this.props;\n    /* TODO: DEPRECATE <circle /> */\n    if (circleRadius) {\n      return <circle r={circleRadius} style={nodeStyle.circle} />;\n    }\n\n    return nodeSvgShape.shape === 'none'\n      ? null\n      : React.createElement(nodeSvgShape.shape, {\n          ...nodeStyle.circle,\n          ...nodeSvgShape.shapeProps,\n        });\n  };\n\n  handleOnClick = evt => {\n    this.props.onClick(this.props.nodeData.id, evt);\n  };\n\n  handleOnMouseOver = evt => {\n    this.props.onMouseOver(this.props.nodeData.id, evt);\n  };\n\n  handleOnMouseOut = evt => {\n    this.props.onMouseOut(this.props.nodeData.id, evt);\n  };\n\n  componentWillLeave(done) {\n    const { nodeData, orientation, transitionDuration } = this.props;\n    const transform = this.setTransform(nodeData, orientation, true);\n    this.applyTransform(transform, transitionDuration, 0, done);\n  }\n\n  render() {\n    const { nodeData, nodeSize, nodeLabelComponent, allowForeignObjects, styles } = this.props;\n    const nodeStyle = nodeData._children ? { ...styles.node } : { ...styles.leafNode };\n    return (\n      <g\n        id={nodeData.id}\n        ref={n => {\n          this.node = n;\n        }}\n        style={this.state.initialStyle}\n        className={nodeData._children ? 'nodeBase' : 'leafNodeBase'}\n        transform={this.state.transform}\n        onClick={this.handleOnClick}\n        onMouseOver={this.handleOnMouseOver}\n        onMouseOut={this.handleOnMouseOut}\n      >\n        {this.renderNodeElement(nodeStyle)}\n\n        {allowForeignObjects && nodeLabelComponent ? (\n          <ForeignObjectElement nodeData={nodeData} nodeSize={nodeSize} {...nodeLabelComponent} />\n        ) : (\n          <SvgTextElement {...this.props} nodeStyle={nodeStyle} />\n        )}\n      </g>\n    );\n  }\n}\n\nNode.defaultProps = {\n  nodeLabelComponent: null,\n  name: '',\n  attributes: undefined,\n  circleRadius: undefined,\n  styles: {\n    node: {\n      circle: {},\n      name: {},\n      attributes: {},\n    },\n    leafNode: {\n      circle: {},\n      name: {},\n      attributes: {},\n    },\n  },\n};\n\nNode.propTypes = {\n  nodeData: T.object.isRequired,\n  nodeSvgShape: T.object.isRequired,\n  nodeLabelComponent: T.object,\n  nodeSize: T.object.isRequired,\n  orientation: T.oneOf(['horizontal', 'vertical']).isRequired,\n  transitionDuration: T.number.isRequired,\n  onClick: T.func.isRequired,\n  onMouseOver: T.func.isRequired,\n  onMouseOut: T.func.isRequired,\n  name: T.string,\n  attributes: T.object,\n  textLayout: T.object.isRequired,\n  subscriptions: T.object.isRequired, // eslint-disable-line react/no-unused-prop-types\n  allowForeignObjects: T.bool.isRequired,\n  circleRadius: T.number,\n  styles: T.object,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport { svg, select } from 'd3';\n\nimport './style.css';\n\nexport default class Link extends React.PureComponent {\n  state = {\n    initialStyle: {\n      opacity: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.applyOpacity(1, this.props.transitionDuration);\n  }\n\n  componentWillLeave(done) {\n    this.applyOpacity(0, this.props.transitionDuration, done);\n  }\n\n  applyOpacity(opacity, transitionDuration, done = () => {}) {\n    if (transitionDuration === 0) {\n      select(this.link).style('opacity', opacity);\n      done();\n    } else {\n      select(this.link)\n        .transition()\n        .duration(transitionDuration)\n        .style('opacity', opacity)\n        .each('end', done);\n    }\n  }\n\n  drawStepPath(linkData, orientation) {\n    const { source, target } = linkData;\n    const deltaY = target.y - source.y;\n\n    return orientation === 'horizontal'\n      ? `M${source.y},${source.x} H${source.y + deltaY / 2} V${target.x} H${target.y}`\n      : `M${source.x},${source.y} V${source.y + deltaY / 2} H${target.x} V${target.y}`;\n  }\n\n  drawDiagonalPath(linkData, orientation) {\n    const diagonal = svg\n      .diagonal()\n      .projection(d => (orientation === 'horizontal' ? [d.y, d.x] : [d.x, d.y]));\n    return diagonal(linkData);\n  }\n\n  drawStraightPath(linkData, orientation) {\n    const straight = svg\n      .line()\n      .interpolate('basis')\n      .x(d => d.x)\n      .y(d => d.y);\n\n    let data = [\n      { x: linkData.source.x, y: linkData.source.y },\n      { x: linkData.target.x, y: linkData.target.y },\n    ];\n\n    if (orientation === 'horizontal') {\n      data = [\n        { x: linkData.source.y, y: linkData.source.x },\n        { x: linkData.target.y, y: linkData.target.x },\n      ];\n    }\n\n    return straight(data);\n  }\n\n  drawElbowPath(d, orientation) {\n    return orientation === 'horizontal'\n      ? `M${d.source.y},${d.source.x}V${d.target.x}H${d.target.y}`\n      : `M${d.source.x},${d.source.y}V${d.target.y}H${d.target.x}`;\n  }\n\n  drawPath() {\n    const { linkData, orientation, pathFunc } = this.props;\n\n    if (typeof pathFunc === 'function') {\n      return pathFunc(linkData, orientation);\n    }\n\n    if (pathFunc === 'elbow') {\n      return this.drawElbowPath(linkData, orientation);\n    }\n\n    if (pathFunc === 'straight') {\n      return this.drawStraightPath(linkData, orientation);\n    }\n\n    if (pathFunc === 'step') {\n      return this.drawStepPath(linkData, orientation);\n    }\n\n    return this.drawDiagonalPath(linkData, orientation);\n  }\n\n  handleOnClick = evt => {\n    this.props.onClick(this.props.linkData.source, this.props.linkData.target, evt);\n  };\n\n  handleOnMouseOver = evt => {\n    this.props.onMouseOver(this.props.linkData.source, this.props.linkData.target, evt);\n  };\n\n  handleOnMouseOut = evt => {\n    this.props.onMouseOut(this.props.linkData.source, this.props.linkData.target, evt);\n  };\n\n  render() {\n    const { styles } = this.props;\n    return (\n      <path\n        ref={l => {\n          this.link = l;\n        }}\n        style={{ ...this.state.initialStyle, ...styles }}\n        className=\"linkBase\"\n        d={this.drawPath()}\n        onClick={this.handleOnClick}\n        onMouseOver={this.handleOnMouseOver}\n        onMouseOut={this.handleOnMouseOut}\n        data-source-id={this.props.linkData.source.id}\n        data-target-id={this.props.linkData.target.id}\n      />\n    );\n  }\n}\n\nLink.defaultProps = {\n  styles: {},\n};\n\nLink.propTypes = {\n  linkData: T.object.isRequired,\n  orientation: T.oneOf(['horizontal', 'vertical']).isRequired,\n  pathFunc: T.oneOfType([T.oneOf(['diagonal', 'elbow', 'straight', 'step']), T.func]).isRequired,\n  transitionDuration: T.number.isRequired,\n  onClick: T.func.isRequired,\n  onMouseOver: T.func.isRequired,\n  onMouseOut: T.func.isRequired,\n  styles: T.object,\n};\n","import React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport T from 'prop-types';\nimport { layout, select, behavior, event } from 'd3';\nimport clone from 'clone';\nimport deepEqual from 'deep-equal';\nimport uuid from 'uuid';\n\nimport NodeWrapper from './NodeWrapper';\nimport Node from '../Node';\nimport Link from '../Link';\nimport './style.css';\n\nclass Tree extends React.Component {\n  state = {\n    // eslint-disable-next-line react/no-unused-state\n    dataRef: this.props.data,\n    data: Tree.assignInternalProperties(clone(this.props.data)),\n    d3: Tree.calculateD3Geometry(this.props),\n    rd3tSvgClassName: `_${uuid.v4()}`,\n    rd3tGClassName: `_${uuid.v4()}`,\n  };\n\n  internalState = {\n    initialRender: true,\n    targetNode: null,\n    isTransitioning: false,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let derivedState = null;\n\n    // Clone new data & assign internal properties if `data` object reference changed.\n    if (nextProps.data !== prevState.dataRef) {\n      derivedState = {\n        // eslint-disable-next-line react/no-unused-state\n        dataRef: nextProps.data,\n        data: Tree.assignInternalProperties(clone(nextProps.data)),\n      };\n    }\n\n    const d3 = Tree.calculateD3Geometry(nextProps);\n    if (!deepEqual(d3, prevState.d3)) {\n      derivedState = derivedState || {};\n      derivedState.d3 = d3;\n    }\n\n    return derivedState;\n  }\n\n  componentDidMount() {\n    this.bindZoomListener(this.props);\n    this.internalState.initialRender = false;\n  }\n\n  componentDidUpdate(prevProps) {\n    // If zoom-specific props change -> rebind listener with new values\n    // Or: rebind zoom listeners to new DOM nodes in case NodeWrapper switched <TransitionGroup> <-> <g>\n    if (\n      !deepEqual(this.props.translate, prevProps.translate) ||\n      !deepEqual(this.props.scaleExtent, prevProps.scaleExtent) ||\n      this.props.zoom !== prevProps.zoom ||\n      this.props.transitionDuration !== prevProps.transitionDuration\n    ) {\n      this.bindZoomListener(this.props);\n    }\n\n    if (typeof this.props.onUpdate === 'function') {\n      this.props.onUpdate({\n        node: this.internalState.targetNode ? clone(this.internalState.targetNode) : null,\n        zoom: this.state.d3.scale,\n        translate: this.state.d3.translate,\n      });\n    }\n    // Reset the last target node after we've flushed it to `onUpdate`.\n    this.internalState.targetNode = null;\n  }\n\n  /**\n   * setInitialTreeDepth - Description\n   *\n   * @param {array} nodeSet Array of nodes generated by `generateTree`\n   * @param {number} initialDepth Maximum initial depth the tree should render\n   *\n   * @return {void}\n   */\n  setInitialTreeDepth(nodeSet, initialDepth) {\n    nodeSet.forEach(n => {\n      n._collapsed = n.depth >= initialDepth;\n    });\n  }\n\n  /**\n   * bindZoomListener - If `props.zoomable`, binds a listener for\n   * \"zoom\" events to the SVG and sets scaleExtent to min/max\n   * specified in `props.scaleExtent`.\n   *\n   * @return {void}\n   */\n  bindZoomListener(props) {\n    const { zoomable, scaleExtent, translate, zoom, onUpdate } = props;\n    const { rd3tSvgClassName, rd3tGClassName } = this.state;\n    const svg = select(`.${rd3tSvgClassName}`);\n    const g = select(`.${rd3tGClassName}`);\n\n    if (zoomable) {\n      svg.call(\n        behavior\n          .zoom()\n          .scaleExtent([scaleExtent.min, scaleExtent.max])\n          .on('zoom', () => {\n            g.attr('transform', `translate(${event.translate}) scale(${event.scale})`);\n            if (typeof onUpdate === 'function') {\n              // This callback is magically called not only on \"zoom\", but on \"drag\", as well,\n              // even though event.type == \"zoom\".\n              // Taking advantage of this and not writing a \"drag\" handler.\n              onUpdate({\n                node: null,\n                zoom: event.scale,\n                translate: { x: event.translate[0], y: event.translate[1] },\n              });\n              this.state.d3.scale = event.scale;\n              this.state.d3.translate = { x: event.translate[0], y: event.translate[1] };\n            }\n          })\n          // Offset so that first pan and zoom does not jump back to [0,0] coords\n          .scale(zoom)\n          .translate([translate.x, translate.y]),\n      );\n    }\n  }\n\n  /**\n   * assignInternalProperties - Assigns internal properties to each node in the\n   * `data` set that are required for tree manipulation and returns\n   * a new `data` array.\n   *\n   * @static\n   * @param {array} data Hierarchical tree data\n   *\n   * @return {array} `data` array with internal properties added\n   */\n  static assignInternalProperties(data) {\n    // Wrap the root node into an array for recursive transformations if it wasn't in one already.\n    const d = Array.isArray(data) ? data : [data];\n    return d.map(node => {\n      node.id = uuid.v4();\n      // If the node's `_collapsed` state wasn't defined by the data set -> default to `false`.\n      if (node._collapsed === undefined) {\n        node._collapsed = false;\n      }\n      // If there are children, recursively assign properties to them too\n      if (node.children && node.children.length > 0) {\n        node.children = Tree.assignInternalProperties(node.children);\n        node._children = node.children;\n      }\n      return node;\n    });\n  }\n\n  /**\n   * findNodesById - Recursively walks the nested `nodeSet` until a node matching `nodeId` is found.\n   *\n   * @param {string} nodeId The `node.id` being searched for\n   * @param {array} nodeSet Array of nested `node` objects\n   * @param {array} hits Accumulator for matches, passed between recursive calls\n   *\n   * @return {array} Set of nodes matching `nodeId`\n   */\n  // TODO: Refactor this into a more readable/reasonable recursive depth-first walk.\n  findNodesById(nodeId, nodeSet, hits) {\n    if (hits.length > 0) {\n      return hits;\n    }\n\n    hits = hits.concat(nodeSet.filter(node => node.id === nodeId));\n\n    nodeSet.forEach(node => {\n      if (node._children && node._children.length > 0) {\n        hits = this.findNodesById(nodeId, node._children, hits);\n      }\n    });\n\n    return hits;\n  }\n\n  /**\n   * findNodesAtDepth - Recursively walks the nested `nodeSet` until all nodes at `depth` have been found.\n   *\n   * @param {number} depth Target depth for which nodes should be returned\n   * @param {array} nodeSet Array of nested `node` objects\n   * @param {array} accumulator Accumulator for matches, passed between recursive calls\n   * @return\n   */\n  findNodesAtDepth(depth, nodeSet, accumulator) {\n    accumulator = accumulator.concat(nodeSet.filter(node => node.depth === depth));\n\n    nodeSet.forEach(node => {\n      if (node._children && node._children.length > 0) {\n        accumulator = this.findNodesAtDepth(depth, node._children, accumulator);\n      }\n    });\n\n    return accumulator;\n  }\n\n  /**\n   * collapseNode - Recursively sets the `_collapsed` property of\n   * the passed `node` object and its children to `true`.\n   *\n   * @param {Node} node Node object with custom properties\n   *\n   * @return {void}\n   */\n  static collapseNode(node) {\n    node._collapsed = true;\n    if (node._children && node._children.length > 0) {\n      node._children.forEach(child => {\n        Tree.collapseNode(child);\n      });\n    }\n  }\n\n  /**\n   * expandNode - Sets the `_collapsed` property of\n   * the passed `node` object to `false`.\n   *\n   * @param {object} node Node object with custom properties\n   *\n   * @return {void}\n   */\n  static expandNode(node) {\n    node._collapsed = false;\n  }\n\n  /**\n   * collapseNodeNeighbors - Collapses all nodes in `nodeSet` that are neighbors (same depth) of `targetNode`.\n   *\n   * @param {object} targetNode\n   * @param {array} nodeSet\n   *\n   * @return {void}\n   */\n  collapseNeighborNodes(targetNode, nodeSet) {\n    const neighbors = this.findNodesAtDepth(targetNode.depth, nodeSet, []).filter(\n      node => node.id !== targetNode.id,\n    );\n    neighbors.forEach(neighbor => Tree.collapseNode(neighbor));\n  }\n\n  /**\n   * handleNodeToggle - Finds the node matching `nodeId` and\n   * expands/collapses it, depending on the current state of\n   * its `_collapsed` property.\n   * `setState` callback receives targetNode and handles\n   * `props.onClick` if defined.\n   *\n   * @param {string} nodeId A node object's `id` field.\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleNodeToggle = (nodeId, evt) => {\n    const data = clone(this.state.data);\n    const matches = this.findNodesById(nodeId, data, []);\n    const targetNode = matches[0];\n    // Persist the SyntheticEvent for downstream handling by users.\n    evt.persist();\n\n    if (this.props.collapsible && !this.state.isTransitioning) {\n      if (targetNode._collapsed) {\n        Tree.expandNode(targetNode);\n        this.props.shouldCollapseNeighborNodes && this.collapseNeighborNodes(targetNode, data);\n      } else {\n        Tree.collapseNode(targetNode);\n      }\n      // Lock node toggling while transition takes place\n      this.setState({ data, isTransitioning: true }, () => this.handleOnClickCb(targetNode, evt));\n      // Await transitionDuration + 10 ms before unlocking node toggling again\n      setTimeout(\n        () => this.setState({ isTransitioning: false }),\n        this.props.transitionDuration + 10,\n      );\n      this.internalState.targetNode = targetNode;\n    } else {\n      this.handleOnClickCb(targetNode, evt);\n    }\n  };\n\n  /**\n   * handleOnClickCb - Handles the user-defined `onClick` function\n   *\n   * @param {object} targetNode Description\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnClickCb = (targetNode, evt) => {\n    const { onClick } = this.props;\n    if (onClick && typeof onClick === 'function') {\n      onClick(clone(targetNode), evt);\n    }\n  };\n\n  /**\n   * handleOnLinkClickCb - Handles the user-defined `onLinkClick` function\n   *\n   * @param {object} linkSource Description\n   *\n   * @param {object} linkTarget Description\n   *\n   *  @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnLinkClickCb = (linkSource, linkTarget, evt) => {\n    const { onLinkClick } = this.props;\n    if (onLinkClick && typeof onLinkClick === 'function') {\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onLinkClick(clone(linkSource), clone(linkTarget), evt);\n    }\n  };\n\n  /**\n   * handleOnMouseOverCb - Handles the user-defined `onMouseOver` function\n   *\n   * @param {string} nodeId\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnMouseOverCb = (nodeId, evt) => {\n    const { onMouseOver } = this.props;\n    if (onMouseOver && typeof onMouseOver === 'function') {\n      const data = clone(this.state.data);\n      const matches = this.findNodesById(nodeId, data, []);\n      const targetNode = matches[0];\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onMouseOver(clone(targetNode), evt);\n    }\n  };\n\n  /**\n   * handleOnLinkMouseOverCb - Handles the user-defined `onLinkMouseOver` function\n   *\n   * @param {object} linkSource Description\n   *\n   * @param {object} linkTarget Description\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnLinkMouseOverCb = (linkSource, linkTarget, evt) => {\n    const { onLinkMouseOver } = this.props;\n    if (onLinkMouseOver && typeof onLinkMouseOver === 'function') {\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onLinkMouseOver(clone(linkSource), clone(linkTarget), evt);\n    }\n  };\n\n  /**\n   * handleOnMouseOutCb - Handles the user-defined `onMouseOut` function\n   *\n   * @param {string} nodeId\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnMouseOutCb = (nodeId, evt) => {\n    const { onMouseOut } = this.props;\n    if (onMouseOut && typeof onMouseOut === 'function') {\n      const data = clone(this.state.data);\n      const matches = this.findNodesById(nodeId, data, []);\n      const targetNode = matches[0];\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onMouseOut(clone(targetNode), evt);\n    }\n  };\n\n  /**\n   * handleOnLinkMouseOutCb - Handles the user-defined `onLinkMouseOut` function\n   *\n   * @param {string} linkSource\n   *\n   * @param {string} linkTarget\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnLinkMouseOutCb = (linkSource, linkTarget, evt) => {\n    const { onLinkMouseOut } = this.props;\n    if (onLinkMouseOut && typeof onLinkMouseOut === 'function') {\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onLinkMouseOut(clone(linkSource), clone(linkTarget), evt);\n    }\n  };\n\n  /**\n   * generateTree - Generates tree elements (`nodes` and `links`) by\n   * grabbing the rootNode from `this.state.data[0]`.\n   * Restricts tree depth to `props.initialDepth` if defined and if this is\n   * the initial render of the tree.\n   *\n   * @return {object} Object containing `nodes` and `links`.\n   */\n  generateTree() {\n    const {\n      initialDepth,\n      useCollapseData,\n      depthFactor,\n      separation,\n      nodeSize,\n      orientation,\n    } = this.props;\n\n    const tree = layout\n      .tree()\n      .nodeSize(orientation === 'horizontal' ? [nodeSize.y, nodeSize.x] : [nodeSize.x, nodeSize.y])\n      .separation(\n        (a, b) => (a.parent.id === b.parent.id ? separation.siblings : separation.nonSiblings),\n      )\n      .children(d => (d._collapsed ? null : d._children));\n\n    const rootNode = this.state.data[0];\n    let nodes = tree.nodes(rootNode);\n\n    // set `initialDepth` on first render if specified\n    if (\n      useCollapseData === false &&\n      initialDepth !== undefined &&\n      this.internalState.initialRender\n    ) {\n      this.setInitialTreeDepth(nodes, initialDepth);\n      nodes = tree.nodes(rootNode);\n    }\n\n    if (depthFactor) {\n      nodes.forEach(node => {\n        node.y = node.depth * depthFactor;\n      });\n    }\n\n    const links = tree.links(nodes);\n    return { nodes, links };\n  }\n\n  /**\n   * calculateD3Geometry - Set initial zoom and position.\n   * Also limit zoom level according to `scaleExtent` on initial display. This is necessary,\n   * because the first time we are setting it as an SVG property, instead of going\n   * through D3's scaling mechanism, which would have picked up both properties.\n   *\n   * @param  {object} nextProps\n   * @return {object} {translate: {x: number, y: number}, zoom: number}\n   */\n  static calculateD3Geometry(nextProps) {\n    let scale;\n\n    if (nextProps.zoom > nextProps.scaleExtent.max) {\n      scale = nextProps.scaleExtent.max;\n    } else if (nextProps.zoom < nextProps.scaleExtent.min) {\n      scale = nextProps.scaleExtent.min;\n    } else {\n      scale = nextProps.zoom;\n    }\n\n    return {\n      translate: nextProps.translate,\n      scale,\n    };\n  }\n\n  render() {\n    const { nodes, links } = this.generateTree();\n    const { rd3tSvgClassName, rd3tGClassName } = this.state;\n    const {\n      nodeSvgShape,\n      nodeLabelComponent,\n      orientation,\n      pathFunc,\n      transitionDuration,\n      zoomable,\n      textLayout,\n      nodeSize,\n      depthFactor,\n      initialDepth,\n      separation,\n      circleRadius,\n      allowForeignObjects,\n      styles,\n    } = this.props;\n    const { translate, scale } = this.state.d3;\n    const subscriptions = { ...nodeSize, ...separation, depthFactor, initialDepth };\n    return (\n      <div className={`rd3t-tree-container ${zoomable ? 'rd3t-grabbable' : undefined}`}>\n        <svg className={rd3tSvgClassName} width=\"100%\" height=\"100%\">\n          <NodeWrapper\n            transitionDuration={transitionDuration}\n            component=\"g\"\n            className={rd3tGClassName}\n            transform={`translate(${translate.x},${translate.y}) scale(${scale})`}\n          >\n            {links.map(linkData => (\n              <Link\n                key={uuid.v4()}\n                orientation={orientation}\n                pathFunc={pathFunc}\n                linkData={linkData}\n                onClick={this.handleOnLinkClickCb}\n                onMouseOver={this.handleOnLinkMouseOverCb}\n                onMouseOut={this.handleOnLinkMouseOutCb}\n                transitionDuration={transitionDuration}\n                styles={styles.links}\n              />\n            ))}\n\n            {nodes.map(nodeData => (\n              <Node\n                key={nodeData.id}\n                nodeSvgShape={{ ...nodeSvgShape, ...nodeData.nodeSvgShape }}\n                nodeLabelComponent={nodeLabelComponent}\n                nodeSize={nodeSize}\n                orientation={orientation}\n                transitionDuration={transitionDuration}\n                nodeData={nodeData}\n                name={nodeData.name}\n                attributes={nodeData.attributes}\n                onClick={this.handleNodeToggle}\n                onMouseOver={this.handleOnMouseOverCb}\n                onMouseOut={this.handleOnMouseOutCb}\n                textLayout={nodeData.textLayout || textLayout}\n                circleRadius={circleRadius}\n                subscriptions={subscriptions}\n                allowForeignObjects={allowForeignObjects}\n                styles={styles.nodes}\n              />\n            ))}\n          </NodeWrapper>\n        </svg>\n      </div>\n    );\n  }\n}\n\nTree.defaultProps = {\n  nodeSvgShape: {\n    shape: 'circle',\n    shapeProps: {\n      r: 10,\n    },\n  },\n  nodeLabelComponent: null,\n  onClick: undefined,\n  onMouseOver: undefined,\n  onMouseOut: undefined,\n  onLinkClick: undefined,\n  onLinkMouseOver: undefined,\n  onLinkMouseOut: undefined,\n  onUpdate: undefined,\n  orientation: 'horizontal',\n  translate: { x: 0, y: 0 },\n  pathFunc: 'diagonal',\n  transitionDuration: 500,\n  depthFactor: undefined,\n  collapsible: true,\n  useCollapseData: false,\n  initialDepth: undefined,\n  zoomable: true,\n  zoom: 1,\n  scaleExtent: { min: 0.1, max: 1 },\n  nodeSize: { x: 140, y: 140 },\n  separation: { siblings: 1, nonSiblings: 2 },\n  textLayout: {\n    textAnchor: 'start',\n    x: 10,\n    y: -10,\n    transform: undefined,\n  },\n  allowForeignObjects: false,\n  shouldCollapseNeighborNodes: false,\n  circleRadius: undefined, // TODO: DEPRECATE\n  styles: {},\n};\n\nTree.propTypes = {\n  data: T.oneOfType([T.array, T.object]).isRequired,\n  nodeSvgShape: T.shape({\n    shape: T.string,\n    shapeProps: T.object,\n  }),\n  nodeLabelComponent: T.object,\n  onClick: T.func,\n  onMouseOver: T.func,\n  onMouseOut: T.func,\n  onLinkClick: T.func,\n  onLinkMouseOver: T.func,\n  onLinkMouseOut: T.func,\n  onUpdate: T.func,\n  orientation: T.oneOf(['horizontal', 'vertical']),\n  translate: T.shape({\n    x: T.number,\n    y: T.number,\n  }),\n  pathFunc: T.oneOfType([T.oneOf(['diagonal', 'elbow', 'straight', 'step']), T.func]),\n  transitionDuration: T.number,\n  depthFactor: T.number,\n  collapsible: T.bool,\n  useCollapseData: T.bool,\n  initialDepth: T.number,\n  zoomable: T.bool,\n  zoom: T.number,\n  scaleExtent: T.shape({\n    min: T.number,\n    max: T.number,\n  }),\n  nodeSize: T.shape({\n    x: T.number,\n    y: T.number,\n  }),\n  separation: T.shape({\n    siblings: T.number,\n    nonSiblings: T.number,\n  }),\n  textLayout: T.object,\n  allowForeignObjects: T.bool,\n  shouldCollapseNeighborNodes: T.bool,\n  circleRadius: T.number,\n  styles: T.shape({\n    nodes: T.object,\n    links: T.object,\n  }),\n};\n\n// Polyfill React 16 lifecycle methods for compat with React 15.\npolyfill(Tree);\n\nexport default Tree;\n","import { csv, json } from 'd3';\nimport uuid from 'uuid';\n\n/**\n * _transformToHierarchy - Transforms a flat array of parent-child links\n * into a hierarchy.\n * @private\n * @param {array<object>} links           Set of parent-child link objects\n * @param {array<string>|undefined} attributeFields Set of `link` fields to be used as attributes\n *\n * @return {array<object>} Single-element array containing the root node object.\n */\nfunction _transformToHierarchy(links, attributeFields) {\n  const nodesByName = {};\n\n  const assignNode = name => {\n    if (!nodesByName[name]) {\n      nodesByName[name] = { name };\n    }\n    return nodesByName[name];\n  };\n\n  const assignNodeWithAttributes = (name, attributes) => {\n    if (!nodesByName[name]) {\n      nodesByName[name] = {\n        name,\n        attributes,\n      };\n    }\n    return nodesByName[name];\n  };\n\n  // Create nodes for each unique source and target.\n  links.forEach(link => {\n    // if `attributeFields` is defined, create/overwrite current `link.attributes`\n    if (attributeFields) {\n      const customAttributes = {};\n      attributeFields.forEach(field => {\n        customAttributes[field] = link[field];\n      });\n      link.attributes = customAttributes;\n    }\n\n    link.source = assignNode(link.parent);\n    link.target = assignNodeWithAttributes(link.child, link.attributes);\n    const parent = link.source;\n    const child = link.target;\n\n    parent.id = uuid.v4();\n    child.id = uuid.v4();\n    child.parent = parent.name || null;\n\n    parent._collapsed = child._collapsed = false; // eslint-disable-line\n    // NOTE We assign to a custom `_children` field instead of D3's reserved\n    // `children` to avoid update anomalies when collapsing/re-expanding nodes.\n    parent._children ? parent._children.push(child) : (parent._children = [child]);\n  });\n\n  // Extract & return the root node\n  const rootLinks = links.filter(link => !link.source.parent);\n  return [rootLinks[0].source];\n}\n\n/**\n * parseCSV - Parses a CSV file into a hierarchy structure.\n *\n * @param {string} csvFilePath     Path to CSV file to be parsed.\n * @param {array<string>|undefined} attributeFields Set of column names to be used as attributes (optional)\n *\n * @return {Promise} Returns hierarchy array if resolved, error object if rejected.\n */\nfunction parseCSV(csvFilePath, attributeFields) {\n  return new Promise((resolve, reject) => {\n    try {\n      csv(csvFilePath, data => resolve(_transformToHierarchy(data, attributeFields))); // lol hello Lisp\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * parseJSON - Parses a hierarchical JSON file that requires no further transformation.\n *\n * @param {string} jsonFilePath Path to JSON file to be parsed.\n *\n * @return {Promise} Returns hierarchy array if resolved, error object if rejected.\n */\nfunction parseJSON(jsonFilePath) {\n  return new Promise((resolve, reject) => {\n    try {\n      json(jsonFilePath, data => resolve([data]));\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * parseFlatJSON - Parses a flat JSON file into a hierarchy structure.\n *\n * @param {string} jsonFilePath Path to flat JSON file to be parsed.\n * @param {array<string>|undefined} attributeFields Set of `link` fields to be used as attributes\n *\n * @return {Promise} Returns hierarchy array if resolved, error object if rejected.\n */\nfunction parseFlatJSON(jsonFilePath, attributeFields) {\n  return new Promise((resolve, reject) => {\n    try {\n      json(jsonFilePath, data => resolve(_transformToHierarchy(data, attributeFields)));\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * generateHierarchy - Generates a hierarchical array from\n * a flat array of links.\n *\n * @param {array<object>} flatArray Flat array of `link` objects\n *\n * @return {array<object>} Hierarchical single-element array.\n */\nfunction generateHierarchy(flatArray) {\n  return _transformToHierarchy(flatArray);\n}\n\nexport default {\n  parseCSV,\n  parseJSON,\n  parseFlatJSON,\n  generateHierarchy,\n};\n"],"names":["NodeWrapper","props","transitionDuration","React","TransitionGroup","component","className","transform","children","defaultProps","propTypes","T","number","isRequired","string","array","SvgTextElement","PureComponent","render","name","nodeStyle","textLayout","attributes","this","style","textAnchor","x","y","dy","Object","keys","map","labelKey","key","uuid","v4","undefined","object","ForeignObjectElement","nodeData","nodeSize","foreignObjectWrapper","width","height","cloneElement","oneOfType","element","node","shape","Node","Component","state","setTransform","orientation","initialStyle","opacity","shouldNodeTransform","ownProps","nextProps","subscriptions","renderNodeElement","circleRadius","nodeSvgShape","r","circle","createElement","shapeProps","handleOnClick","evt","onClick","id","handleOnMouseOver","onMouseOver","handleOnMouseOut","onMouseOut","componentDidMount","commitTransform","componentDidUpdate","shouldComponentUpdate","shouldTranslateToOrigin","parent","hasParent","originX","originY","applyTransform","done","select","attr","transition","duration","each","componentWillLeave","nodeLabelComponent","allowForeignObjects","styles","_children","leafNode","ref","n","oneOf","func","bool","Link","linkData","source","target","applyOpacity","link","drawStepPath","deltaY","drawDiagonalPath","svg","diagonal","projection","d","drawStraightPath","straight","line","interpolate","data","drawElbowPath","drawPath","pathFunc","l","data-source-id","data-target-id","Tree","dataRef","assignInternalProperties","clone","d3","calculateD3Geometry","rd3tSvgClassName","rd3tGClassName","internalState","initialRender","targetNode","isTransitioning","handleNodeToggle","nodeId","findNodesById","persist","collapsible","_collapsed","expandNode","shouldCollapseNeighborNodes","collapseNeighborNodes","collapseNode","setState","handleOnClickCb","setTimeout","handleOnLinkClickCb","linkSource","linkTarget","onLinkClick","handleOnMouseOverCb","handleOnLinkMouseOverCb","onLinkMouseOver","handleOnMouseOutCb","handleOnLinkMouseOutCb","onLinkMouseOut","[object Object]","prevState","derivedState","deepEqual","bindZoomListener","prevProps","translate","scaleExtent","zoom","onUpdate","scale","setInitialTreeDepth","nodeSet","initialDepth","forEach","depth","zoomable","g","call","behavior","min","max","on","event","Array","isArray","length","hits","concat","filter","findNodesAtDepth","accumulator","child","neighbor","generateTree","useCollapseData","depthFactor","separation","tree","layout","a","b","siblings","nonSiblings","rootNode","nodes","links","_transformToHierarchy","attributeFields","nodesByName","customAttributes","field","assignNodeWithAttributes","push","polyfill","parseCSV","csvFilePath","Promise","resolve","reject","csv","err","parseJSON","jsonFilePath","json","parseFlatJSON","generateHierarchy","flatArray"],"mappings":"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"}
{"version":3,"file":"react-d3-tree.module.js","sources":["../src/Tree/NodeWrapper.js","../src/Node/SvgTextElement.js","../src/Node/ForeignObjectElement.js","../src/Node/index.js","../src/Link/index.js","../src/Tree/index.js","../src/util/index.js"],"sourcesContent":["import React from 'react';\nimport T from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\n\n// eslint-disable-next-line\nconst NodeWrapper = props =>\n  props.transitionDuration > 0 ? (\n    <TransitionGroup\n      component={props.component}\n      className={props.className}\n      transform={props.transform}\n    >\n      {props.children}\n    </TransitionGroup>\n  ) : (\n    <g className={props.className} transform={props.transform}>\n      {props.children}\n    </g>\n  );\n\nNodeWrapper.defaultProps = {\n  component: 'g',\n};\n\nNodeWrapper.propTypes = {\n  transitionDuration: T.number.isRequired,\n  component: T.string,\n  className: T.string.isRequired,\n  transform: T.string.isRequired,\n  children: T.array.isRequired,\n};\n\nexport default NodeWrapper;\n","import React from 'react';\nimport uuid from 'uuid';\nimport T from 'prop-types';\n\nexport default class SvgTextElement extends React.PureComponent {\n  render() {\n    const { name, nodeStyle, textLayout, attributes } = this.props;\n    return (\n      <g>\n        <text\n          className=\"nodeNameBase\"\n          style={nodeStyle.name}\n          textAnchor={textLayout.textAnchor}\n          x={textLayout.x}\n          y={textLayout.y}\n          transform={textLayout.transform}\n          dy=\".35em\"\n        >\n          {name}\n        </text>\n        <text\n          className=\"nodeAttributesBase\"\n          y={textLayout.y + 10}\n          textAnchor={textLayout.textAnchor}\n          transform={textLayout.transform}\n          style={nodeStyle.attributes}\n        >\n          {attributes &&\n            Object.keys(attributes).map(labelKey => (\n              <tspan x={textLayout.x} dy=\"1.2em\" key={uuid.v4()}>\n                {labelKey}: {attributes[labelKey]}\n              </tspan>\n            ))}\n        </text>\n      </g>\n    );\n  }\n}\n\nSvgTextElement.defaultProps = {\n  attributes: undefined,\n};\n\nSvgTextElement.propTypes = {\n  name: T.string.isRequired,\n  attributes: T.object,\n  textLayout: T.object.isRequired,\n  nodeStyle: T.object.isRequired,\n};\n","import React from 'react';\nimport T from 'prop-types';\n\nexport const BASE_MARGIN = 24;\n\nexport default class ForeignObjectElement extends React.PureComponent {\n  render() {\n    const { nodeData, nodeSize, render, foreignObjectWrapper } = this.props;\n    return (\n      <foreignObject\n        width={nodeSize.x - BASE_MARGIN}\n        height={nodeSize.y - BASE_MARGIN}\n        {...foreignObjectWrapper}\n      >\n        {React.cloneElement(render, { nodeData })}\n      </foreignObject>\n    );\n  }\n}\n\nForeignObjectElement.defaultProps = {\n  foreignObjectWrapper: {},\n};\n\nForeignObjectElement.propTypes = {\n  render: T.oneOfType([T.element, T.node]).isRequired,\n  nodeData: T.object.isRequired,\n  nodeSize: T.shape({\n    x: T.number,\n    y: T.number,\n  }).isRequired,\n  foreignObjectWrapper: T.object,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport { select } from 'd3';\n\nimport SvgTextElement from './SvgTextElement';\nimport ForeignObjectElement from './ForeignObjectElement';\nimport './style.css';\n\nexport default class Node extends React.Component {\n  state = {\n    transform: this.setTransform(this.props.nodeData, this.props.orientation, true),\n    initialStyle: {\n      opacity: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.commitTransform();\n  }\n\n  componentDidUpdate() {\n    this.commitTransform();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.shouldNodeTransform(this.props, nextProps);\n  }\n\n  shouldNodeTransform = (ownProps, nextProps) =>\n    nextProps.subscriptions !== ownProps.subscriptions ||\n    nextProps.nodeData.x !== ownProps.nodeData.x ||\n    nextProps.nodeData.y !== ownProps.nodeData.y ||\n    nextProps.orientation !== ownProps.orientation;\n\n  setTransform(nodeData, orientation, shouldTranslateToOrigin = false) {\n    const { x, y, parent } = nodeData;\n    if (shouldTranslateToOrigin) {\n      const hasParent = typeof parent === 'object';\n      const originX = hasParent ? parent.x : 0;\n      const originY = hasParent ? parent.y : 0;\n      return orientation === 'horizontal'\n        ? `translate(${originY},${originX})`\n        : `translate(${originX},${originY})`;\n    }\n    return orientation === 'horizontal' ? `translate(${y},${x})` : `translate(${x},${y})`;\n  }\n\n  applyTransform(transform, transitionDuration, opacity = 1, done = () => {}) {\n    if (transitionDuration === 0) {\n      select(this.node)\n        .attr('transform', transform)\n        .style('opacity', opacity);\n      done();\n    } else {\n      select(this.node)\n        .transition()\n        .duration(transitionDuration)\n        .attr('transform', transform)\n        .style('opacity', opacity)\n        .each('end', done);\n    }\n  }\n\n  commitTransform() {\n    const { nodeData, orientation, transitionDuration } = this.props;\n    const transform = this.setTransform(nodeData, orientation);\n\n    this.applyTransform(transform, transitionDuration);\n  }\n\n  renderNodeElement = nodeStyle => {\n    const { circleRadius, nodeSvgShape } = this.props;\n    /* TODO: DEPRECATE <circle /> */\n    if (circleRadius) {\n      return <circle r={circleRadius} style={nodeStyle.circle} />;\n    }\n\n    return nodeSvgShape.shape === 'none'\n      ? null\n      : React.createElement(nodeSvgShape.shape, {\n          ...nodeStyle.circle,\n          ...nodeSvgShape.shapeProps,\n        });\n  };\n\n  handleOnClick = evt => {\n    this.props.onClick(this.props.nodeData.id, evt);\n  };\n\n  handleOnMouseOver = evt => {\n    this.props.onMouseOver(this.props.nodeData.id, evt);\n  };\n\n  handleOnMouseOut = evt => {\n    this.props.onMouseOut(this.props.nodeData.id, evt);\n  };\n\n  componentWillLeave(done) {\n    const { nodeData, orientation, transitionDuration } = this.props;\n    const transform = this.setTransform(nodeData, orientation, true);\n    this.applyTransform(transform, transitionDuration, 0, done);\n  }\n\n  render() {\n    const { nodeData, nodeSize, nodeLabelComponent, allowForeignObjects, styles } = this.props;\n    const nodeStyle = nodeData._children ? { ...styles.node } : { ...styles.leafNode };\n    return (\n      <g\n        id={nodeData.id}\n        ref={n => {\n          this.node = n;\n        }}\n        style={this.state.initialStyle}\n        className={nodeData._children ? 'nodeBase' : 'leafNodeBase'}\n        transform={this.state.transform}\n        onClick={this.handleOnClick}\n        onMouseOver={this.handleOnMouseOver}\n        onMouseOut={this.handleOnMouseOut}\n      >\n        {this.renderNodeElement(nodeStyle)}\n\n        {allowForeignObjects && nodeLabelComponent ? (\n          <ForeignObjectElement nodeData={nodeData} nodeSize={nodeSize} {...nodeLabelComponent} />\n        ) : (\n          <SvgTextElement {...this.props} nodeStyle={nodeStyle} />\n        )}\n      </g>\n    );\n  }\n}\n\nNode.defaultProps = {\n  nodeLabelComponent: null,\n  name: '',\n  attributes: undefined,\n  circleRadius: undefined,\n  styles: {\n    node: {\n      circle: {},\n      name: {},\n      attributes: {},\n    },\n    leafNode: {\n      circle: {},\n      name: {},\n      attributes: {},\n    },\n  },\n};\n\nNode.propTypes = {\n  nodeData: T.object.isRequired,\n  nodeSvgShape: T.object.isRequired,\n  nodeLabelComponent: T.object,\n  nodeSize: T.object.isRequired,\n  orientation: T.oneOf(['horizontal', 'vertical']).isRequired,\n  transitionDuration: T.number.isRequired,\n  onClick: T.func.isRequired,\n  onMouseOver: T.func.isRequired,\n  onMouseOut: T.func.isRequired,\n  name: T.string,\n  attributes: T.object,\n  textLayout: T.object.isRequired,\n  subscriptions: T.object.isRequired, // eslint-disable-line react/no-unused-prop-types\n  allowForeignObjects: T.bool.isRequired,\n  circleRadius: T.number,\n  styles: T.object,\n};\n","import React from 'react';\nimport T from 'prop-types';\nimport { svg, select } from 'd3';\n\nimport './style.css';\n\nexport default class Link extends React.PureComponent {\n  state = {\n    initialStyle: {\n      opacity: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.applyOpacity(1, this.props.transitionDuration);\n  }\n\n  componentWillLeave(done) {\n    this.applyOpacity(0, this.props.transitionDuration, done);\n  }\n\n  applyOpacity(opacity, transitionDuration, done = () => {}) {\n    if (transitionDuration === 0) {\n      select(this.link).style('opacity', opacity);\n      done();\n    } else {\n      select(this.link)\n        .transition()\n        .duration(transitionDuration)\n        .style('opacity', opacity)\n        .each('end', done);\n    }\n  }\n\n  drawStepPath(linkData, orientation) {\n    const { source, target } = linkData;\n    const deltaY = target.y - source.y;\n\n    return orientation === 'horizontal'\n      ? `M${source.y},${source.x} H${source.y + deltaY / 2} V${target.x} H${target.y}`\n      : `M${source.x},${source.y} V${source.y + deltaY / 2} H${target.x} V${target.y}`;\n  }\n\n  drawDiagonalPath(linkData, orientation) {\n    const diagonal = svg\n      .diagonal()\n      .projection(d => (orientation === 'horizontal' ? [d.y, d.x] : [d.x, d.y]));\n    return diagonal(linkData);\n  }\n\n  drawStraightPath(linkData, orientation) {\n    const straight = svg\n      .line()\n      .interpolate('basis')\n      .x(d => d.x)\n      .y(d => d.y);\n\n    let data = [\n      { x: linkData.source.x, y: linkData.source.y },\n      { x: linkData.target.x, y: linkData.target.y },\n    ];\n\n    if (orientation === 'horizontal') {\n      data = [\n        { x: linkData.source.y, y: linkData.source.x },\n        { x: linkData.target.y, y: linkData.target.x },\n      ];\n    }\n\n    return straight(data);\n  }\n\n  drawElbowPath(d, orientation) {\n    return orientation === 'horizontal'\n      ? `M${d.source.y},${d.source.x}V${d.target.x}H${d.target.y}`\n      : `M${d.source.x},${d.source.y}V${d.target.y}H${d.target.x}`;\n  }\n\n  drawPath() {\n    const { linkData, orientation, pathFunc } = this.props;\n\n    if (typeof pathFunc === 'function') {\n      return pathFunc(linkData, orientation);\n    }\n\n    if (pathFunc === 'elbow') {\n      return this.drawElbowPath(linkData, orientation);\n    }\n\n    if (pathFunc === 'straight') {\n      return this.drawStraightPath(linkData, orientation);\n    }\n\n    if (pathFunc === 'step') {\n      return this.drawStepPath(linkData, orientation);\n    }\n\n    return this.drawDiagonalPath(linkData, orientation);\n  }\n\n  handleOnClick = evt => {\n    this.props.onClick(this.props.linkData.source, this.props.linkData.target, evt);\n  };\n\n  handleOnMouseOver = evt => {\n    this.props.onMouseOver(this.props.linkData.source, this.props.linkData.target, evt);\n  };\n\n  handleOnMouseOut = evt => {\n    this.props.onMouseOut(this.props.linkData.source, this.props.linkData.target, evt);\n  };\n\n  render() {\n    const { styles } = this.props;\n    return (\n      <path\n        ref={l => {\n          this.link = l;\n        }}\n        style={{ ...this.state.initialStyle, ...styles }}\n        className=\"linkBase\"\n        d={this.drawPath()}\n        onClick={this.handleOnClick}\n        onMouseOver={this.handleOnMouseOver}\n        onMouseOut={this.handleOnMouseOut}\n        data-source-id={this.props.linkData.source.id}\n        data-target-id={this.props.linkData.target.id}\n      />\n    );\n  }\n}\n\nLink.defaultProps = {\n  styles: {},\n};\n\nLink.propTypes = {\n  linkData: T.object.isRequired,\n  orientation: T.oneOf(['horizontal', 'vertical']).isRequired,\n  pathFunc: T.oneOfType([T.oneOf(['diagonal', 'elbow', 'straight', 'step']), T.func]).isRequired,\n  transitionDuration: T.number.isRequired,\n  onClick: T.func.isRequired,\n  onMouseOver: T.func.isRequired,\n  onMouseOut: T.func.isRequired,\n  styles: T.object,\n};\n","import React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport T from \"prop-types\";\nimport { tree as treeLayout, select, zoom as zoomBehavior } from \"d3\";\nimport clone from \"clone\";\nimport deepEqual from \"deep-equal\";\nimport uuid from \"uuid\";\n\nimport NodeWrapper from \"./NodeWrapper\";\nimport Node from \"../Node\";\nimport Link from \"../Link\";\nimport \"./style.css\";\n\nclass Tree extends React.Component {\n  state = {\n    // eslint-disable-next-line react/no-unused-state\n    dataRef: this.props.data,\n    data: Tree.assignInternalProperties(clone(this.props.data)),\n    d3: Tree.calculateD3Geometry(this.props),\n    rd3tSvgClassName: `_${uuid.v4()}`,\n    rd3tGClassName: `_${uuid.v4()}`,\n  };\n\n  internalState = {\n    initialRender: true,\n    targetNode: null,\n    isTransitioning: false,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let derivedState = null;\n\n    // Clone new data & assign internal properties if `data` object reference changed.\n    if (nextProps.data !== prevState.dataRef) {\n      derivedState = {\n        // eslint-disable-next-line react/no-unused-state\n        dataRef: nextProps.data,\n        data: Tree.assignInternalProperties(clone(nextProps.data)),\n      };\n    }\n\n    const d3 = Tree.calculateD3Geometry(nextProps);\n    if (!deepEqual(d3, prevState.d3)) {\n      derivedState = derivedState || {};\n      derivedState.d3 = d3;\n    }\n\n    return derivedState;\n  }\n\n  componentDidMount() {\n    this.bindZoomListener(this.props);\n    this.internalState.initialRender = false;\n  }\n\n  componentDidUpdate(prevProps) {\n    // If zoom-specific props change -> rebind listener with new values\n    // Or: rebind zoom listeners to new DOM nodes in case NodeWrapper switched <TransitionGroup> <-> <g>\n    if (\n      !deepEqual(this.props.translate, prevProps.translate) ||\n      !deepEqual(this.props.scaleExtent, prevProps.scaleExtent) ||\n      this.props.zoom !== prevProps.zoom ||\n      this.props.transitionDuration !== prevProps.transitionDuration\n    ) {\n      this.bindZoomListener(this.props);\n    }\n\n    if (typeof this.props.onUpdate === \"function\") {\n      this.props.onUpdate({\n        node: this.internalState.targetNode\n          ? clone(this.internalState.targetNode)\n          : null,\n        zoom: this.state.d3.scale,\n        translate: this.state.d3.translate,\n      });\n    }\n    // Reset the last target node after we've flushed it to `onUpdate`.\n    this.internalState.targetNode = null;\n  }\n\n  /**\n   * setInitialTreeDepth - Description\n   *\n   * @param {array} nodeSet Array of nodes generated by `generateTree`\n   * @param {number} initialDepth Maximum initial depth the tree should render\n   *\n   * @return {void}\n   */\n  setInitialTreeDepth(nodeSet, initialDepth) {\n    nodeSet.forEach((n) => {\n      n._collapsed = n.depth >= initialDepth;\n    });\n  }\n\n  /**\n   * bindZoomListener - If `props.zoomable`, binds a listener for\n   * \"zoom\" events to the SVG and sets scaleExtent to min/max\n   * specified in `props.scaleExtent`.\n   *\n   * @return {void}\n   */\n  bindZoomListener(props) {\n    const { zoomable, scaleExtent, translate, zoom, onUpdate } = props;\n    const { rd3tSvgClassName, rd3tGClassName } = this.state;\n    const svg = select(`.${rd3tSvgClassName}`);\n    const g = select(`.${rd3tGClassName}`);\n\n    if (zoomable) {\n      svg.call(\n        zoomBehavior()\n          .scaleExtent([scaleExtent.min, scaleExtent.max])\n          .on(\"zoom\", (event) => {\n            g.attr(\n              \"transform\",\n              `translate(${event.translate}) scale(${event.scale})`\n            );\n            if (typeof onUpdate === \"function\") {\n              // This callback is magically called not only on \"zoom\", but on \"drag\", as well,\n              // even though event.type == \"zoom\".\n              // Taking advantage of this and not writing a \"drag\" handler.\n              onUpdate({\n                node: null,\n                zoom: event.scale,\n                translate: { x: event.translate[0], y: event.translate[1] },\n              });\n              this.state.d3.scale = event.scale;\n              this.state.d3.translate = {\n                x: event.translate[0],\n                y: event.translate[1],\n              };\n            }\n          })\n          // Offset so that first pan and zoom does not jump back to [0,0] coords\n          .scale(zoom)\n          .translate([translate.x, translate.y])\n      );\n    }\n  }\n\n  /**\n   * assignInternalProperties - Assigns internal properties to each node in the\n   * `data` set that are required for tree manipulation and returns\n   * a new `data` array.\n   *\n   * @static\n   * @param {array} data Hierarchical tree data\n   *\n   * @return {array} `data` array with internal properties added\n   */\n  static assignInternalProperties(data) {\n    // Wrap the root node into an array for recursive transformations if it wasn't in one already.\n    const d = Array.isArray(data) ? data : [data];\n    return d.map((node) => {\n      node.id = uuid.v4();\n      // If the node's `_collapsed` state wasn't defined by the data set -> default to `false`.\n      if (node._collapsed === undefined) {\n        node._collapsed = false;\n      }\n      // If there are children, recursively assign properties to them too\n      if (node.children && node.children.length > 0) {\n        node.children = Tree.assignInternalProperties(node.children);\n        node._children = node.children;\n      }\n      return node;\n    });\n  }\n\n  /**\n   * findNodesById - Recursively walks the nested `nodeSet` until a node matching `nodeId` is found.\n   *\n   * @param {string} nodeId The `node.id` being searched for\n   * @param {array} nodeSet Array of nested `node` objects\n   * @param {array} hits Accumulator for matches, passed between recursive calls\n   *\n   * @return {array} Set of nodes matching `nodeId`\n   */\n  // TODO: Refactor this into a more readable/reasonable recursive depth-first walk.\n  findNodesById(nodeId, nodeSet, hits) {\n    if (hits.length > 0) {\n      return hits;\n    }\n\n    hits = hits.concat(nodeSet.filter((node) => node.id === nodeId));\n\n    nodeSet.forEach((node) => {\n      if (node._children && node._children.length > 0) {\n        hits = this.findNodesById(nodeId, node._children, hits);\n      }\n    });\n\n    return hits;\n  }\n\n  /**\n   * findNodesAtDepth - Recursively walks the nested `nodeSet` until all nodes at `depth` have been found.\n   *\n   * @param {number} depth Target depth for which nodes should be returned\n   * @param {array} nodeSet Array of nested `node` objects\n   * @param {array} accumulator Accumulator for matches, passed between recursive calls\n   * @return\n   */\n  findNodesAtDepth(depth, nodeSet, accumulator) {\n    accumulator = accumulator.concat(\n      nodeSet.filter((node) => node.depth === depth)\n    );\n\n    nodeSet.forEach((node) => {\n      if (node._children && node._children.length > 0) {\n        accumulator = this.findNodesAtDepth(depth, node._children, accumulator);\n      }\n    });\n\n    return accumulator;\n  }\n\n  /**\n   * collapseNode - Recursively sets the `_collapsed` property of\n   * the passed `node` object and its children to `true`.\n   *\n   * @param {Node} node Node object with custom properties\n   *\n   * @return {void}\n   */\n  static collapseNode(node) {\n    node._collapsed = true;\n    if (node._children && node._children.length > 0) {\n      node._children.forEach((child) => {\n        Tree.collapseNode(child);\n      });\n    }\n  }\n\n  /**\n   * expandNode - Sets the `_collapsed` property of\n   * the passed `node` object to `false`.\n   *\n   * @param {object} node Node object with custom properties\n   *\n   * @return {void}\n   */\n  static expandNode(node) {\n    node._collapsed = false;\n  }\n\n  /**\n   * collapseNodeNeighbors - Collapses all nodes in `nodeSet` that are neighbors (same depth) of `targetNode`.\n   *\n   * @param {object} targetNode\n   * @param {array} nodeSet\n   *\n   * @return {void}\n   */\n  collapseNeighborNodes(targetNode, nodeSet) {\n    const neighbors = this.findNodesAtDepth(\n      targetNode.depth,\n      nodeSet,\n      []\n    ).filter((node) => node.id !== targetNode.id);\n    neighbors.forEach((neighbor) => Tree.collapseNode(neighbor));\n  }\n\n  /**\n   * handleNodeToggle - Finds the node matching `nodeId` and\n   * expands/collapses it, depending on the current state of\n   * its `_collapsed` property.\n   * `setState` callback receives targetNode and handles\n   * `props.onClick` if defined.\n   *\n   * @param {string} nodeId A node object's `id` field.\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleNodeToggle = (nodeId, evt) => {\n    const data = clone(this.state.data);\n    const matches = this.findNodesById(nodeId, data, []);\n    const targetNode = matches[0];\n    // Persist the SyntheticEvent for downstream handling by users.\n    evt.persist();\n\n    if (this.props.collapsible && !this.state.isTransitioning) {\n      if (targetNode._collapsed) {\n        Tree.expandNode(targetNode);\n        this.props.shouldCollapseNeighborNodes &&\n          this.collapseNeighborNodes(targetNode, data);\n      } else {\n        Tree.collapseNode(targetNode);\n      }\n      // Lock node toggling while transition takes place\n      this.setState({ data, isTransitioning: true }, () =>\n        this.handleOnClickCb(targetNode, evt)\n      );\n      // Await transitionDuration + 10 ms before unlocking node toggling again\n      setTimeout(\n        () => this.setState({ isTransitioning: false }),\n        this.props.transitionDuration + 10\n      );\n      this.internalState.targetNode = targetNode;\n    } else {\n      this.handleOnClickCb(targetNode, evt);\n    }\n  };\n\n  /**\n   * handleOnClickCb - Handles the user-defined `onClick` function\n   *\n   * @param {object} targetNode Description\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnClickCb = (targetNode, evt) => {\n    const { onClick } = this.props;\n    if (onClick && typeof onClick === \"function\") {\n      onClick(clone(targetNode), evt);\n    }\n  };\n\n  /**\n   * handleOnLinkClickCb - Handles the user-defined `onLinkClick` function\n   *\n   * @param {object} linkSource Description\n   *\n   * @param {object} linkTarget Description\n   *\n   *  @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnLinkClickCb = (linkSource, linkTarget, evt) => {\n    const { onLinkClick } = this.props;\n    if (onLinkClick && typeof onLinkClick === \"function\") {\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onLinkClick(clone(linkSource), clone(linkTarget), evt);\n    }\n  };\n\n  /**\n   * handleOnMouseOverCb - Handles the user-defined `onMouseOver` function\n   *\n   * @param {string} nodeId\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnMouseOverCb = (nodeId, evt) => {\n    const { onMouseOver } = this.props;\n    if (onMouseOver && typeof onMouseOver === \"function\") {\n      const data = clone(this.state.data);\n      const matches = this.findNodesById(nodeId, data, []);\n      const targetNode = matches[0];\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onMouseOver(clone(targetNode), evt);\n    }\n  };\n\n  /**\n   * handleOnLinkMouseOverCb - Handles the user-defined `onLinkMouseOver` function\n   *\n   * @param {object} linkSource Description\n   *\n   * @param {object} linkTarget Description\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnLinkMouseOverCb = (linkSource, linkTarget, evt) => {\n    const { onLinkMouseOver } = this.props;\n    if (onLinkMouseOver && typeof onLinkMouseOver === \"function\") {\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onLinkMouseOver(clone(linkSource), clone(linkTarget), evt);\n    }\n  };\n\n  /**\n   * handleOnMouseOutCb - Handles the user-defined `onMouseOut` function\n   *\n   * @param {string} nodeId\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnMouseOutCb = (nodeId, evt) => {\n    const { onMouseOut } = this.props;\n    if (onMouseOut && typeof onMouseOut === \"function\") {\n      const data = clone(this.state.data);\n      const matches = this.findNodesById(nodeId, data, []);\n      const targetNode = matches[0];\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onMouseOut(clone(targetNode), evt);\n    }\n  };\n\n  /**\n   * handleOnLinkMouseOutCb - Handles the user-defined `onLinkMouseOut` function\n   *\n   * @param {string} linkSource\n   *\n   * @param {string} linkTarget\n   *\n   * @param {object} evt Event\n   *\n   * @return {void}\n   */\n  handleOnLinkMouseOutCb = (linkSource, linkTarget, evt) => {\n    const { onLinkMouseOut } = this.props;\n    if (onLinkMouseOut && typeof onLinkMouseOut === \"function\") {\n      // Persist the SyntheticEvent for downstream handling by users.\n      evt.persist();\n      onLinkMouseOut(clone(linkSource), clone(linkTarget), evt);\n    }\n  };\n\n  /**\n   * generateTree - Generates tree elements (`nodes` and `links`) by\n   * grabbing the rootNode from `this.state.data[0]`.\n   * Restricts tree depth to `props.initialDepth` if defined and if this is\n   * the initial render of the tree.\n   *\n   * @return {object} Object containing `nodes` and `links`.\n   */\n  generateTree() {\n    const {\n      initialDepth,\n      useCollapseData,\n      depthFactor,\n      separation,\n      nodeSize,\n      orientation,\n    } = this.props;\n\n    const tree = treeLayout()\n      .nodeSize(\n        orientation === \"horizontal\"\n          ? [nodeSize.y, nodeSize.x]\n          : [nodeSize.x, nodeSize.y]\n      )\n      .separation((a, b) =>\n        a.parent.id === b.parent.id\n          ? separation.siblings\n          : separation.nonSiblings\n      )\n      .children((d) => (d._collapsed ? null : d._children));\n\n    const rootNode = this.state.data[0];\n    let nodes = tree.nodes(rootNode);\n\n    // set `initialDepth` on first render if specified\n    if (\n      useCollapseData === false &&\n      initialDepth !== undefined &&\n      this.internalState.initialRender\n    ) {\n      this.setInitialTreeDepth(nodes, initialDepth);\n      nodes = tree.nodes(rootNode);\n    }\n\n    if (depthFactor) {\n      nodes.forEach((node) => {\n        node.y = node.depth * depthFactor;\n      });\n    }\n\n    const links = tree.links(nodes);\n    return { nodes, links };\n  }\n\n  /**\n   * calculateD3Geometry - Set initial zoom and position.\n   * Also limit zoom level according to `scaleExtent` on initial display. This is necessary,\n   * because the first time we are setting it as an SVG property, instead of going\n   * through D3's scaling mechanism, which would have picked up both properties.\n   *\n   * @param  {object} nextProps\n   * @return {object} {translate: {x: number, y: number}, zoom: number}\n   */\n  static calculateD3Geometry(nextProps) {\n    let scale;\n\n    if (nextProps.zoom > nextProps.scaleExtent.max) {\n      scale = nextProps.scaleExtent.max;\n    } else if (nextProps.zoom < nextProps.scaleExtent.min) {\n      scale = nextProps.scaleExtent.min;\n    } else {\n      scale = nextProps.zoom;\n    }\n\n    return {\n      translate: nextProps.translate,\n      scale,\n    };\n  }\n\n  render() {\n    const { nodes, links } = this.generateTree();\n    const { rd3tSvgClassName, rd3tGClassName } = this.state;\n    const {\n      nodeSvgShape,\n      nodeLabelComponent,\n      orientation,\n      pathFunc,\n      transitionDuration,\n      zoomable,\n      textLayout,\n      nodeSize,\n      depthFactor,\n      initialDepth,\n      separation,\n      circleRadius,\n      allowForeignObjects,\n      styles,\n    } = this.props;\n    const { translate, scale } = this.state.d3;\n    const subscriptions = {\n      ...nodeSize,\n      ...separation,\n      depthFactor,\n      initialDepth,\n    };\n    return (\n      <div\n        className={`rd3t-tree-container ${\n          zoomable ? \"rd3t-grabbable\" : undefined\n        }`}\n      >\n        <svg className={rd3tSvgClassName} width=\"100%\" height=\"100%\">\n          <NodeWrapper\n            transitionDuration={transitionDuration}\n            component=\"g\"\n            className={rd3tGClassName}\n            transform={`translate(${translate.x},${translate.y}) scale(${scale})`}\n          >\n            {links.map((linkData) => (\n              <Link\n                key={uuid.v4()}\n                orientation={orientation}\n                pathFunc={pathFunc}\n                linkData={linkData}\n                onClick={this.handleOnLinkClickCb}\n                onMouseOver={this.handleOnLinkMouseOverCb}\n                onMouseOut={this.handleOnLinkMouseOutCb}\n                transitionDuration={transitionDuration}\n                styles={styles.links}\n              />\n            ))}\n\n            {nodes.map((nodeData) => (\n              <Node\n                key={nodeData.id}\n                nodeSvgShape={{ ...nodeSvgShape, ...nodeData.nodeSvgShape }}\n                nodeLabelComponent={nodeLabelComponent}\n                nodeSize={nodeSize}\n                orientation={orientation}\n                transitionDuration={transitionDuration}\n                nodeData={nodeData}\n                name={nodeData.name}\n                attributes={nodeData.attributes}\n                onClick={this.handleNodeToggle}\n                onMouseOver={this.handleOnMouseOverCb}\n                onMouseOut={this.handleOnMouseOutCb}\n                textLayout={nodeData.textLayout || textLayout}\n                circleRadius={circleRadius}\n                subscriptions={subscriptions}\n                allowForeignObjects={allowForeignObjects}\n                styles={styles.nodes}\n              />\n            ))}\n          </NodeWrapper>\n        </svg>\n      </div>\n    );\n  }\n}\n\nTree.defaultProps = {\n  nodeSvgShape: {\n    shape: \"circle\",\n    shapeProps: {\n      r: 10,\n    },\n  },\n  nodeLabelComponent: null,\n  onClick: undefined,\n  onMouseOver: undefined,\n  onMouseOut: undefined,\n  onLinkClick: undefined,\n  onLinkMouseOver: undefined,\n  onLinkMouseOut: undefined,\n  onUpdate: undefined,\n  orientation: \"horizontal\",\n  translate: { x: 0, y: 0 },\n  pathFunc: \"diagonal\",\n  transitionDuration: 500,\n  depthFactor: undefined,\n  collapsible: true,\n  useCollapseData: false,\n  initialDepth: undefined,\n  zoomable: true,\n  zoom: 1,\n  scaleExtent: { min: 0.1, max: 1 },\n  nodeSize: { x: 140, y: 140 },\n  separation: { siblings: 1, nonSiblings: 2 },\n  textLayout: {\n    textAnchor: \"start\",\n    x: 10,\n    y: -10,\n    transform: undefined,\n  },\n  allowForeignObjects: false,\n  shouldCollapseNeighborNodes: false,\n  circleRadius: undefined, // TODO: DEPRECATE\n  styles: {},\n};\n\nTree.propTypes = {\n  data: T.oneOfType([T.array, T.object]).isRequired,\n  nodeSvgShape: T.shape({\n    shape: T.string,\n    shapeProps: T.object,\n  }),\n  nodeLabelComponent: T.object,\n  onClick: T.func,\n  onMouseOver: T.func,\n  onMouseOut: T.func,\n  onLinkClick: T.func,\n  onLinkMouseOver: T.func,\n  onLinkMouseOut: T.func,\n  onUpdate: T.func,\n  orientation: T.oneOf([\"horizontal\", \"vertical\"]),\n  translate: T.shape({\n    x: T.number,\n    y: T.number,\n  }),\n  pathFunc: T.oneOfType([\n    T.oneOf([\"diagonal\", \"elbow\", \"straight\", \"step\"]),\n    T.func,\n  ]),\n  transitionDuration: T.number,\n  depthFactor: T.number,\n  collapsible: T.bool,\n  useCollapseData: T.bool,\n  initialDepth: T.number,\n  zoomable: T.bool,\n  zoom: T.number,\n  scaleExtent: T.shape({\n    min: T.number,\n    max: T.number,\n  }),\n  nodeSize: T.shape({\n    x: T.number,\n    y: T.number,\n  }),\n  separation: T.shape({\n    siblings: T.number,\n    nonSiblings: T.number,\n  }),\n  textLayout: T.object,\n  allowForeignObjects: T.bool,\n  shouldCollapseNeighborNodes: T.bool,\n  circleRadius: T.number,\n  styles: T.shape({\n    nodes: T.object,\n    links: T.object,\n  }),\n};\n\n// Polyfill React 16 lifecycle methods for compat with React 15.\npolyfill(Tree);\n\nexport default Tree;\n","import { csv, json } from 'd3';\nimport uuid from 'uuid';\n\n/**\n * _transformToHierarchy - Transforms a flat array of parent-child links\n * into a hierarchy.\n * @private\n * @param {array<object>} links           Set of parent-child link objects\n * @param {array<string>|undefined} attributeFields Set of `link` fields to be used as attributes\n *\n * @return {array<object>} Single-element array containing the root node object.\n */\nfunction _transformToHierarchy(links, attributeFields) {\n  const nodesByName = {};\n\n  const assignNode = name => {\n    if (!nodesByName[name]) {\n      nodesByName[name] = { name };\n    }\n    return nodesByName[name];\n  };\n\n  const assignNodeWithAttributes = (name, attributes) => {\n    if (!nodesByName[name]) {\n      nodesByName[name] = {\n        name,\n        attributes,\n      };\n    }\n    return nodesByName[name];\n  };\n\n  // Create nodes for each unique source and target.\n  links.forEach(link => {\n    // if `attributeFields` is defined, create/overwrite current `link.attributes`\n    if (attributeFields) {\n      const customAttributes = {};\n      attributeFields.forEach(field => {\n        customAttributes[field] = link[field];\n      });\n      link.attributes = customAttributes;\n    }\n\n    link.source = assignNode(link.parent);\n    link.target = assignNodeWithAttributes(link.child, link.attributes);\n    const parent = link.source;\n    const child = link.target;\n\n    parent.id = uuid.v4();\n    child.id = uuid.v4();\n    child.parent = parent.name || null;\n\n    parent._collapsed = child._collapsed = false; // eslint-disable-line\n    // NOTE We assign to a custom `_children` field instead of D3's reserved\n    // `children` to avoid update anomalies when collapsing/re-expanding nodes.\n    parent._children ? parent._children.push(child) : (parent._children = [child]);\n  });\n\n  // Extract & return the root node\n  const rootLinks = links.filter(link => !link.source.parent);\n  return [rootLinks[0].source];\n}\n\n/**\n * parseCSV - Parses a CSV file into a hierarchy structure.\n *\n * @param {string} csvFilePath     Path to CSV file to be parsed.\n * @param {array<string>|undefined} attributeFields Set of column names to be used as attributes (optional)\n *\n * @return {Promise} Returns hierarchy array if resolved, error object if rejected.\n */\nfunction parseCSV(csvFilePath, attributeFields) {\n  return new Promise((resolve, reject) => {\n    try {\n      csv(csvFilePath, data => resolve(_transformToHierarchy(data, attributeFields))); // lol hello Lisp\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * parseJSON - Parses a hierarchical JSON file that requires no further transformation.\n *\n * @param {string} jsonFilePath Path to JSON file to be parsed.\n *\n * @return {Promise} Returns hierarchy array if resolved, error object if rejected.\n */\nfunction parseJSON(jsonFilePath) {\n  return new Promise((resolve, reject) => {\n    try {\n      json(jsonFilePath, data => resolve([data]));\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * parseFlatJSON - Parses a flat JSON file into a hierarchy structure.\n *\n * @param {string} jsonFilePath Path to flat JSON file to be parsed.\n * @param {array<string>|undefined} attributeFields Set of `link` fields to be used as attributes\n *\n * @return {Promise} Returns hierarchy array if resolved, error object if rejected.\n */\nfunction parseFlatJSON(jsonFilePath, attributeFields) {\n  return new Promise((resolve, reject) => {\n    try {\n      json(jsonFilePath, data => resolve(_transformToHierarchy(data, attributeFields)));\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * generateHierarchy - Generates a hierarchical array from\n * a flat array of links.\n *\n * @param {array<object>} flatArray Flat array of `link` objects\n *\n * @return {array<object>} Hierarchical single-element array.\n */\nfunction generateHierarchy(flatArray) {\n  return _transformToHierarchy(flatArray);\n}\n\nexport default {\n  parseCSV,\n  parseJSON,\n  parseFlatJSON,\n  generateHierarchy,\n};\n"],"names":["NodeWrapper","props","transitionDuration","React","TransitionGroup","component","className","transform","children","defaultProps","propTypes","T","number","isRequired","string","array","SvgTextElement","render","this","nodeStyle","textLayout","attributes","style","name","textAnchor","x","y","dy","Object","keys","map","labelKey","key","uuid","v4","PureComponent","undefined","object","ForeignObjectElement","nodeData","nodeSize","width","height","foreignObjectWrapper","cloneElement","oneOfType","element","node","shape","Node","state","_this","setTransform","orientation","initialStyle","opacity","shouldNodeTransform","ownProps","nextProps","subscriptions","renderNodeElement","circleRadius","nodeSvgShape","r","circle","createElement","shapeProps","handleOnClick","evt","onClick","id","handleOnMouseOver","onMouseOver","handleOnMouseOut","onMouseOut","componentDidMount","commitTransform","componentDidUpdate","shouldComponentUpdate","shouldTranslateToOrigin","parent","hasParent","originX","originY","applyTransform","done","select","attr","transition","duration","each","componentWillLeave","nodeLabelComponent","allowForeignObjects","styles","_children","leafNode","ref","n","_this2","Component","oneOf","func","bool","Link","linkData","source","target","applyOpacity","link","drawStepPath","deltaY","drawDiagonalPath","svg","diagonal","projection","d","drawStraightPath","straight","line","interpolate","data","drawElbowPath","drawPath","pathFunc","l","data-source-id","data-target-id","Tree","dataRef","assignInternalProperties","clone","d3","calculateD3Geometry","rd3tSvgClassName","rd3tGClassName","internalState","initialRender","targetNode","isTransitioning","handleNodeToggle","nodeId","findNodesById","persist","collapsible","_collapsed","expandNode","shouldCollapseNeighborNodes","collapseNeighborNodes","collapseNode","setState","handleOnClickCb","setTimeout","handleOnLinkClickCb","linkSource","linkTarget","onLinkClick","handleOnMouseOverCb","handleOnLinkMouseOverCb","onLinkMouseOver","handleOnMouseOutCb","handleOnLinkMouseOutCb","onLinkMouseOut","getDerivedStateFromProps","prevState","derivedState","deepEqual","bindZoomListener","prevProps","translate","scaleExtent","zoom","onUpdate","scale","setInitialTreeDepth","nodeSet","initialDepth","forEach","depth","zoomable","g","call","zoomBehavior","min","max","on","event","Array","isArray","length","hits","concat","filter","_this3","findNodesAtDepth","accumulator","_this4","child","neighbor","generateTree","useCollapseData","depthFactor","separation","tree","treeLayout","a","b","siblings","nonSiblings","rootNode","nodes","links","_this5","_transformToHierarchy","attributeFields","nodesByName","customAttributes","field","assignNodeWithAttributes","push","polyfill","parseCSV","csvFilePath","Promise","resolve","reject","csv","err","parseJSON","jsonFilePath","json","parseFlatJSON","generateHierarchy","flatArray"],"mappings":"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"}